library(maptools)
library(dplyr)
library(RSQLite)
library(RSQLite.extfuns)
library(ncdf4)
library(reshape2)
library(tcltk)
install.packages("RSQLite.extfuns")
install.packages("reshape2")
install.packages("C:/Users/koneil/Downloads/ncdf4_1.12.tar.gz", repos = NULL, type = "source")
# Define the projections of the shapefiles and Daymet data
#   Note: The Daymet proj4 is just the coordinate system the projection is based on.
PROJ4.NHD     <- "+proj=longlat +ellps=GRS80 +datum=NAD83 +no_defs"
PROJ4.DAYMET  <- "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
# Temporal range
START_YEAR <- 2013
END_YEAR <- 1980
# Variables
VARIABLES <- c('tmax', 'tmin', 'prcp', 'dayl', 'srad', 'vp', 'swe')
# Destination folder of the raw Daymet data
DAYMET_DIRECTORY <- 'F:/KPONEIL/SourceData/climate/DAYMET'
# Name of the database with Daymet data paired to NHDPlus catchments
#DATABASE_NAME <- 'DaymetByNHDPlusCatchments'
DATABASE_NAME <- 'dummy'
# Catchment shapefile
CATCHMENTS <- readShapePoly ( "C:/KPONEIL/gis/nhdPlusV2/stateCatchments/MA_Catchment.shp", proj4string=CRS(PROJ4.NHD))
# Run this until package is created
source('C:/KPONEIL/GitHub/personal/dataProcessing/scripts/functions/daymetMosaicDownload.R')
source('C:/KPONEIL/GitHub/personal/dataProcessing/scripts/functions/spatialAverageDaymet.R')
seq(from=START_YEAR, to = END_YEAR, by = 1)
seq(from=START_YEAR, to = END_YEAR, by = -1)
START_YEAR <- 1995
END_YEAR <- 2013
daymetMosaicDownload(startYear = START_YEAR,
endYear = END_YEAR,
variables = VARIABLES,
destinationFolder = file.path(DAYMET_DIRECTORY, 'raw'))
DAYMET_DIRECTORY <- 'C:/KPONEIL/SourceData/climate/DAYMET/mosaics'
daymetMosaicDownload(startYear = START_YEAR,
endYear = END_YEAR,
variables = VARIABLES,
destinationFolder = file.path(DAYMET_DIRECTORY, 'raw'))
DAYMET_DIRECTORY <- 'C:/KPONEIL/rawData/climate/DAYMET/mosaics'
daymetMosaicDownload(startYear = START_YEAR,
endYear = END_YEAR,
variables = VARIABLES,
destinationFolder = file.path(DAYMET_DIRECTORY, 'raw'))
DAYMET_DIRECTORY <- 'C:/KPONEIL/rawData/daymet/mosaics'
daymetMosaicDownload(startYear = START_YEAR,
endYear = END_YEAR,
variables = VARIABLES,
destinationFolder = file.path(DAYMET_DIRECTORY, 'raw'))
startYear = START_YEAR
endYear = END_YEAR
variables = VARIABLES
daymetMosaicDownload(startYear = START_YEAR,
endYear = END_YEAR,
variables = VARIABLES,
destinationFolder = file.path(DAYMET_DIRECTORY))
library(foreign)
library(maptools)
read.dbf('C:/KPONEIL/GitHub/personal/dataProcessing/impoundments/arcFiles/MA_Wetlands_25kmBuf.dbf')
dists <- read.dbf('C:/KPONEIL/GitHub/personal/dataProcessing/impoundments/arcFiles/MA_Wetlands_25kmBuf.dbf')
head(dists)
PROJ4.NHD     <- "+proj=longlat +ellps=GRS80 +datum=NAD83 +no_defs"
CATCHMENTS <- readShapePoly ( "C:/KPONEIL/gis/nhdPlusV2/stateCatchments/MA_Catchment.shp", proj4string=CRS(PROJ4.NHD))
PROJ4.NHD     <- "+proj=longlat +ellps=GRS80 +datum=NAD83 +no_defs"
CATCHMENTS <- readShapePoly ( "C:/KPONEIL/GitHub/personal/dataProcessing/impoundments/arcFiles/MA_Catchment.shp", proj4string=CRS(PROJ4.NHD))
CATCHMENTS <- readShapePoly ( "C:/KPONEIL/GitHub/personal/dataProcessing/impoundments/arcFiles/MA_Buffer_NHDFlowlines.shp", proj4string=CRS(PROJ4.NHD))
PROJ4.NHD   <- "+proj=longlat +ellps=GRS80 +datum=NAD83 +no_defs"
CATCHMENTS <- readShapePoly ( "C:/KPONEIL/GitHub/personal/dataProcessing/impoundments/arcFiles/MA_Buffer_NHDFlowlines.shp", proj4string=CRS(PROJ4.NHD))
names(dists)[ which(names(dists) == 'FEATUREID' )] <- 'FEATUREID'
head(dists)
dist <- read.dbf('C:/KPONEIL/GitHub/personal/dataProcessing/impoundments/arcFiles/MA_Wetlands_25kmBuf.dbf')
names(dist)[ which(names(dist) == 'FEATUREID' )] <- 'FEATUREID'
names(dist)
names(dist)[ which(names(dist) == 'RID' )] <- 'FEATUREID'
names(dist)
lengths <- read.dbf ( "C:/KPONEIL/GitHub/personal/dataProcessing/impoundments/arcFiles/MA_Buffer_NHDFlowlines.dbf")
head(lengths)
reachLengths <- read.dbf ( "C:/KPONEIL/GitHub/personal/dataProcessing/impoundments/arcFiles/MA_Buffer_NHDFlowlines.dbf")
reachLengths <- reachLengths[,c('COMID', 'LENGTHKM')]
dist <- read.dbf('C:/KPONEIL/GitHub/personal/dataProcessing/impoundments/arcFiles/MA_Wetlands_25kmBuf.dbf')
names(dist)[ which(names(dist) == 'RID' )] <- 'FEATUREID'
